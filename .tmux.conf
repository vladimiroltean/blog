# Sane scrolling
set -ga terminal-overrides ',xterm*:smcup@:rmcup@'
# Make mouse useful in copy mode
setw -g mode-mouse on
# Allow mouse to select which pane to use
set -g mouse-select-pane on
set -g mouse-resize-pane on
set -g mouse-select-window on

# Set ability to capture on start and restore on exit window data when running an application
setw -g alternate-screen on

# use UTF8
set -g utf8
set-window-option -g utf8 on

set -g default-terminal "screen-256color"
set -g history-limit 10000

# For vim compatibility
set-window-option -g xterm-keys on
set -sg escape-time 0

# use send-prefix to pass C-b through to application
#bind C-b send-prefix

set -g prefix C-a
unbind-key C-b
bind-key C-a send-prefix

# set window and pane index to 1 (0 by default)
set-option -g base-index 1
setw -g pane-base-index 1

# reload ~/.tmux.conf using PREFIX r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# ----------------------
# set some pretty colors
# ----------------------
# set pane colors - highlight the active pane
set-option -g pane-border-fg colour235 #base02
set-option -g pane-active-border-fg colour240 #base01

# colorize messages in the command line
set-option -g message-bg black #base02
set-option -g message-fg brightred #orange

# ----------------------
# Status Bar
# -----------------------
set-option -g status on                # turn the status bar on
set -g status-utf8 on                  # set utf-8 for the status bar
set -g status-interval 5               # set update frequencey (default 15 seconds)
set -g status-justify centre           # center window list for clarity
# set-option -g status-position top    # position the status bar at top of screen

# visual notification of activity in other windows
setw -g monitor-activity on
set -g visual-activity on

# set color for status bar
set-option -g status-bg colour235 #base02
set-option -g status-fg yellow #yellow
set-option -g status-attr dim

# set window list colors - red for active and cyan for inactive
set-window-option -g window-status-fg brightblue #base0
set-window-option -g window-status-bg colour236
set-window-option -g window-status-attr dim

set-window-option -g window-status-current-fg brightred #orange
set-window-option -g window-status-current-bg colour236
set-window-option -g window-status-current-attr bright

# show host name and IP address on left side of status bar
set -g status-left-length 70
set -g status-left "#[fg=green]: #h : #[fg=brightblue]#(curl icanhazip.com) #[fg=yellow]#(ifconfig en0 | grep 'inet ' | awk '{print \"en0 \" $2}') #[fg=yellow]#(ip addr show dev eth0 | grep 'inet ' | awk '{print \"eth0 \" $2}') #[fg=yellow]#(ip addr show dev wlan0 | grep 'inet ' | awk '{print \"wlan0 \" $2}') #[fg=red]#(ip addr show dev tun0 | grep 'inet ' | awk '{print \"vpn \" $2}') #[fg=red]#(ip addr show dev br0 | grep 'inet ' | awk '{print \"br0 \" $2}') "

# show session name, window & pane number, date and time on right side of
# status bar
set -g status-right-length 60
set -g status-right "#[fg=blue]#S #I:#P #[fg=yellow]:: %d %b %Y #[fg=green]:: %l:%M %p :: #(date -u | awk '{print $4}')::"

# disable pane switching after first keystroke
set-option -g repeat-time 200

# ---------------------
# Copy & Paste
# ---------------------
# use vim keybindings in copy mode
setw -g mode-keys vi
# setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
#bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
#bind y run 'tmux save-buffer - | reattach-to-user-namespace pbcopy '
#bind C-y run 'tmux save-buffer - | reattach-to-user-namespace pbcopy '

# move x clipboard into tmux paste buffer
bind p run "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer"
# move tmux copy buffer into x clipboard
bind y run "tmux save-buffer - | xclip -i"

# Splitting windows into panes with h and v
bind-key | split-window -h -c '#{pane_current_path}'
bind-key - split-window -v -c '#{pane_current_path}'

#new pane start in the current directory - update needed by tmux 1.9
bind-key c new-window -c '#{pane_current_path}'

# Set up resize-pane keys
unbind-key C-up
unbind-key C-down
unbind-key C-left
unbind-key C-right
bind-key -r j resize-pane -D 3
bind-key -r h resize-pane -L 3
bind-key -r k resize-pane -U 3
bind-key -r l resize-pane -R 3

## smart pane switching with awareness of vim splits
#bind -n C-left run "(tmux display-message -p '#{pane_current_command}' | grep -iq \
				  #vim && tmux send-keys C-h) || tmux select-pane -L"
#bind -n C-right run "(tmux display-message -p '#{pane_current_command}' | grep -iq \
				  #vim && tmux send-keys C-j) || tmux select-pane -D"
#bind -n C-up run "(tmux display-message -p '#{pane_current_command}' | grep -iq \
				  #vim && tmux send-keys C-k) || tmux select-pane -U"
#bind -n C-down run "(tmux display-message -p '#{pane_current_command}' | grep -iq \
				  #vim && tmux send-keys C-l) || tmux select-pane -R"
#bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq \
				  #vim && tmux send-keys 'C-\\') || tmux select-pane -l"
#
