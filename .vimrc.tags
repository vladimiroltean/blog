" Ctags
" Shortcuts: ^]  (go to tag)
"            ^t  (go back)
"            g^] (list tags)
"            :tn (go to next tag)
"            :tp (go to previous tag)
"            @:  (execute last command)
"            :tselect <tag_name> or
"            :!rgrep <tag_name> . (search for <tag_name>)
"            Ctrl-P (plugin for fuzzy search)
set tags=./tags.headers;/,./tags;/,tags;/;
map [I :cs find c <C-r><C-w><CR>

let g:ctrlp_extensions = ['tag', 'buffertag', 'quickfix', 'dir', 'rtscript',
                        \ 'undo', 'line', 'changes', 'mixed', 'bookmarkdir']

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"" CSCOPE settings for vim
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""
"" This file contains some boilerplate settings for vim's cscope interface,
"" plus some keyboard mappings that I've found useful.
""
"" USAGE:
"" -- vim 6:     Stick this file in your ~/.vim/plugin directory (or in a
""               'plugin' directory in some other directory that is in your
""               'runtimepath'.
""
"" -- vim 5:     Stick this file somewhere and 'source cscope.vim' it from
""               your ~/.vimrc file (or cut and paste it into your .vimrc).
""
"" NOTE:
"" These key maps use multiple keystrokes (2 or 3 keys).  If you find that vim
"" keeps timing you out before you can complete them, try changing your timeout
"" settings, as explained below.
""
"" Happy cscoping,
""
"" Jason Duell       jduell@alumni.princeton.edu     2002/3/7
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""


"" This tests to see if vim was configured with the '--enable-cscope' option
"" when it was compiled.  If it wasn't, time to recompile vim...
"if has("cscope")

	"""""""""""""" Standard cscope/vim boilerplate

	"" use both cscope and ctag for 'ctrl-]', ':ta', and 'vim -t'
	"set cscopetag

	"" check cscope for definition of a symbol before checking ctags: set to 1
	"" if you want the reverse search order.
	"set csto=1

	"" add any cscope database in current directory
	"if filereadable("cscope.out")
		"cs add cscope.out
	"" else add the database pointed to by environment variable
	"elseif $CSCOPE_DB != ""
		"cs add $CSCOPE_DB
	"endif

	"" show msg when any other cscope db added
	"set cscopeverbose

	"""""""""""""" key map timeouts
	""
	"" By default Vim will only wait 1 second for each keystroke in a mapping.
	"" You may find that too short with the above typemaps.  If so, you should
	"" either turn off mapping timeouts via 'notimeout'.
	""
	""set notimeout
	""
	"" Or, you can keep timeouts, by uncommenting the timeoutlen line below,
	"" with your own personal favorite value (in milliseconds):
	""
	""set timeoutlen=4000
	""
	"" Either way, since mapping timeout settings by default also set the
	"" timeouts for multicharacter 'keys codes' (like <F1>), you should also
	"" set ttimeout and ttimeoutlen: otherwise, you will experience strange
	"" delays as vim waits for a keystroke after you hit ESC (it will be
	"" waiting to see if the ESC is actually part of a key code like <F1>).
	""
	""set ttimeout
	""
	"" personally, I find a tenth of a second to work well for key code
	"" timeouts. If you experience problems and have a slow terminal or network
	"" connection, set it higher.  If you don't set ttimeoutlen, the value for
	"" timeoutlent (default: 1000 = 1 second, which is sluggish) is used.
	""
	""set ttimeoutlen=100

"endif

